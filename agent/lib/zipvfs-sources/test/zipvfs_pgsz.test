
# This file contains simple test cases for zipvfs. Specifically, for testing
# the backup API with different page-sizes.
#

set testdir $env(SQLITE_TEST_DIR)
source $testdir/tester.tcl
set ::testprefix zipvfs_pgsz

db close
rle_register "" 1
sqlite3 db test.db

proc backup {destdb destfile srcdb srcfile } {
  sqlite3_backup B $destdb $destfile $srcdb $srcfile
  B step -1
  B finish
}

do_execsql_test 1.0 {
  PRAGMA page_size = 8192;
  CREATE TABLE t1(a, b);
  CREATE TABLE t2(c, d);
  PRAGMA main.page_size;
} {8192}

db close
sqlite3 db test.db

forcedelete test.db2
sqlite3 db2 test.db2

do_test 1.0 {
  backup db2 main db main
} SQLITE_OK

do_test 1.1 {
  execsql { PRAGMA main.page_size } db2
} {8192}

do_test 1.2 {
  execsql { PRAGMA main.page_size } db
} {8192}

do_test 1.3 {
  execsql { SELECT * FROM sqlite_master } db
} [list {*}{
  table t1 t1 2 {CREATE TABLE t1(a, b)} 
  table t2 t2 3 {CREATE TABLE t2(c, d)}
}]

do_test 1.4 {
  execsql { SELECT * FROM sqlite_master } db2
} [list {*}{
  table t1 t1 2 {CREATE TABLE t1(a, b)} 
  table t2 t2 3 {CREATE TABLE t2(c, d)}
}]

db2 close
db close
rle_unregister
finish_test

