
# This file contains test cases for zipvfs. 
#

set testdir $env(SQLITE_TEST_DIR)
source $testdir/tester.tcl
set ::testprefix zipvfs_dict

db close
rle_register "" 1
sqlite3 db test.db

zipvfs_vtab_register db

do_execsql_test 1.0 {
  CREATE VIRTUAL TABLE temp.dictstore USING zipvfs_dictstore(main);
  SELECT * FROM dictstore;
} {}

do_test 1.1 { 
  file size test.db 
} {0}

do_execsql_test 1.2 {
  INSERT INTO dictstore VALUES(1, X'1234567890')
}

do_execsql_test 1.3 {
  SELECT id, quote(val) FROM dictstore
} {1 X'1234567890'}

do_execsql_test 1.4 {
  CREATE TABLE t1(x, y);
  INSERT INTO t1 VALUES('a', 'b'), ('c', 'd');
  SELECT * FROM t1;
  SELECT id, quote(val) FROM dictstore
} {a b c d 1 X'1234567890'}

db close
sqlite3 db test.db
zipvfs_vtab_register db

do_execsql_test 1.5 {
  CREATE VIRTUAL TABLE temp.dictstore USING zipvfs_dictstore('main');
  SELECT * FROM t1;
  SELECT id, quote(val) FROM dictstore
} {a b c d 1 X'1234567890'}

do_execsql_test 1.6 {
  INSERT INTO dictstore VALUES(2, X'0987654321');
  SELECT id, quote(val) FROM dictstore;
  SELECT * FROM t1;
} {
  1 X'1234567890' 2 X'0987654321' 
  a b c d
}

#-------------------------------------------------------------------------
#
reset_db
zipvfs_vtab_register db

do_execsql_test 2.0 {
  CREATE TABLE t1(x, y);
  CREATE INDEX t1xy ON t1(x, y);
  WITH s(i) AS (
    VALUES(1) UNION ALL SELECT i+1 FROM s WHERE i<100
  )
  INSERT INTO t1 SELECT randomblob(400), randomblob(400) FROM s;
}

do_execsql_test 2.1 {
  SELECT count(*) FROM t1;
  PRAGMA integrity_check;
} {100 ok}

do_execsql_test 2.2 {
  CREATE VIRTUAL TABLE dictstore USING zipvfs_dictstore("main");
} {}

db eval {
  SELECT * FROM zipvfs;
} {
  #puts "pgno=$pgno offset=$offset size=$size"
}

do_execsql_test 2.3 {
  INSERT INTO dictstore VALUES(1, X'1234567890');
}

db eval {
  SELECT * FROM zipvfs;
} {
  #puts "pgno=$pgno offset=$offset size=$size"
}

do_execsql_test 2.4 {
  SELECT count(*) FROM t1;
  PRAGMA integrity_check;
} {100 ok}

db close
sqlite3 db test.db
zipvfs_vtab_register db

do_execsql_test 2.5 {
  SELECT count(*) FROM t1;
  PRAGMA integrity_check;
} {100 ok}

do_execsql_test 2.5.1 {
  DELETE FROM dictstore;
  SELECT count(*) FROM dictstore;
} {0}

do_execsql_test 2.6 {
  INSERT INTO dictstore SELECT rowid, x FROM t1
}

do_execsql_test 2.7 {
  SELECT sum( val=x ) FROM t1, dictstore WHERE t1.rowid=dictstore.id;
} {100}

do_execsql_test 2.7.1 {
  SELECT count(*) FROM dictstore WHERE (id%2)==0
} {50}

do_execsql_test 2.8 {
  DELETE FROM dictstore WHERE (id%2)==0
} {}

do_execsql_test 2.9 {
  SELECT sum( val=x ) FROM t1, dictstore WHERE t1.rowid=dictstore.id;
} {50}

do_execsql_test 2.10 {
  UPDATE dictstore SET val = (
    SELECT y FROM t1 WHERE t1.rowid=dictstore.id
  );
}

do_execsql_test 2.11 {
  SELECT sum( val=x ), sum( val=y ) 
  FROM t1, dictstore WHERE t1.rowid=dictstore.id;
} {0 50}

do_execsql_test 2.12 {
  VACUUM;
  SELECT sum( val=x ), sum( val=y ) 
  FROM t1, dictstore WHERE t1.rowid=dictstore.id;
} {0 50}
do_execsql_test 2.13 {
  SELECT count(*) FROM dictstore;
} {50}

#-------------------------------------------------------------------------
reset_db
db close
rle_unregister
v3_register zip "" 0

sqlite3 db file:test.db?vfs=zip&zv=dict -uri 1
zipvfs_vtab_register db
do_execsql_test 3.0 {
  CREATE VIRTUAL TABLE temp.ddd USING zipvfs_dictstore([main]);
  INSERT INTO ddd VALUES(1, X'FFFFFFFF');
}

do_execsql_test 3.1 {
  CREATE TABLE t1(x UNIQUE, y UNIQUE);
  WITH s(i) AS (SELECT 1 UNION ALL SELECT i+1 FROM S WHERE i<100)
  INSERT INTO t1 SELECT randomblob(300), randomblob(300) FROM s;

  SELECT count(*) FROM t1;
  PRAGMA integrity_check;
} {100 ok}

do_execsql_test 3.2 {
  INSERT INTO ddd VALUES(2, X'12121212');
}
db close
sqlite3 db test.db -vfs zip
zipvfs_vtab_register db
do_execsql_test 3.3 {
  SELECT count(*) FROM t1;
  PRAGMA integrity_check;
} {100 ok}

do_execsql_test 3.4 {
  CREATE TABLE t2(x UNIQUE, y UNIQUE);
  WITH s(i) AS (SELECT 1 UNION ALL SELECT i+1 FROM S WHERE i<100)
  INSERT INTO t2 SELECT randomblob(300), randomblob(300) FROM s;

  SELECT count(*) FROM t2;
  PRAGMA integrity_check;
} {100 ok}

do_execsql_test 3.5 {
  SELECT count(*) FROM t1;
  PRAGMA integrity_check;
} {100 ok}

do_execsql_test 3.6 {
  CREATE VIRTUAL TABLE temp.ddd USING zipvfs_dictstore(`main`);
  DELETE FROM ddd WHERE id=1;
}
db close
sqlite3 db test.db -vfs zip
zipvfs_vtab_register db
do_catchsql_test 3.7 {
  SELECT count(*) FROM t1;
  PRAGMA integrity_check;
} {1 {disk I/O error}}

do_catchsql_test 3.8 {
  SELECT count(*) FROM t2;
} {0 100}

do_catchsql_test 3.9 {
  CREATE VIRTUAL TABLE temp.ddd USING zipvfs_dictstore(main);
  INSERT INTO ddd VALUES(1, X'FFFFFFFE');
  SELECT count(*) FROM t1;
} {1 {database disk image is malformed}}

db close
sqlite3 db test.db -vfs zip
zipvfs_vtab_register db

do_catchsql_test 3.10 {
  SELECT count(*) FROM t2;
  CREATE VIRTUAL TABLE temp.ddd USING zipvfs_dictstore(main);
  UPDATE ddd SET val=X'FFFF' WHERE id=1;
  SELECT count(*) FROM t1;
} {0 {100 100}}

do_execsql_test 3.11 {
  PRAGMA integrity_check;
} {ok}

forcedelete test.db2
do_execsql_test 4.0 {
  ATTACH 'test.db2' AS "bill's";
  CREATE VIRTUAL TABLE temp.aaa USING zipvfs_dictstore('bill''s');
  INSERT INTO aaa VALUES(1, X'000000000011');
  SELECT quote(val) FROM aaa;
} {X'000000000011'}


catch { db close }
generic_unregister zip
finish_test

