
# This file contains simple test cases for zipvfs.
#

set testdir $env(SQLITE_TEST_DIR)
source $testdir/tester.tcl
set ::testprefix zipvfs_sync
db close
sqlite3_shutdown
sqlite3_config_uri 1
zip_register "" 0

proc execsql_sync {sql} {
  set s $::sqlite_sync_count
  set res [execsql $sql]
  concat [expr $::sqlite_sync_count-$s] $res
}

proc do_execsql_sync_test {tn sql res} {
  uplevel [list do_test $tn [list execsql_sync $sql] [list {*}$res]]
}

foreach {tn file} {
  0 test.db
  1 file:test.db?vfs=zip
} {
  forcedelete test.db

  #-----------------------------------------------------------------------
  # Tests for journal mode.
  #
  sqlite3 db $file
  do_execsql_test 1.0 {
    CREATE TABLE t1(a, b);
    INSERT INTO t1 VALUES(1, 2);
  }

  do_execsql_sync_test $tn.1.1 { INSERT INTO t1 VALUES(3, 4) } 4

  # synchronous=normal. So, 1 sync on the directory, 1 on the journal, 1 
  # on the db file. 3 in total.
  do_execsql_test      $tn.1.2.1 { PRAGMA main.synchronous = NORMAL }
  do_execsql_test      $tn.1.2.2 { PRAGMA main.synchronous }     1
  do_execsql_sync_test $tn.1.2.3 { INSERT INTO t1 VALUES(5, 6) } 3
  
  # synchronous=off. No syncs.
  do_execsql_test      $tn.1.3.1 { PRAGMA main.synchronous = OFF }
  do_execsql_test      $tn.1.3.2 { PRAGMA main.synchronous }     0
  do_execsql_sync_test $tn.1.3.3 { INSERT INTO t1 VALUES(7, 8) } 0
 
  # synchronous=full, journal_mode=delete. So, 1 sync on the directory,
  # 2 on the journal, 1 on the db file. 4 in total.
  do_execsql_test      $tn.1.4.1 { PRAGMA main.synchronous = FULL }
  do_execsql_test      $tn.1.4.2 { PRAGMA main.synchronous }      2
  do_execsql_sync_test $tn.1.4.3 { INSERT INTO t1 VALUES(9, 10) } 4

  #-----------------------------------------------------------------------
  # Tests for wal mode.
  #
  if {$tn==0} {
    do_execsql_test    $tn.1.5 { PRAGMA        journal_mode = wal } {wal}
  } else {
    do_execsql_test    $tn.1.5 { PRAGMA zipvfs_journal_mode = wal } {wal}
  }

  # sync=full, journal_mode=wal. One sync on the directory, two on the 
  # wal file.
  do_execsql_sync_test $tn.1.6 { INSERT INTO t1 VALUES(11, 12) } 3

  # One sync on the wal file.
  do_execsql_sync_test $tn.1.7 { INSERT INTO t1 VALUES(13, 14) } 1

  # No syncs.
  do_execsql_test      $tn.1.8.1 { PRAGMA main.synchronous = NORMAL }
  do_execsql_test      $tn.1.8.2 { PRAGMA main.synchronous }          1
  do_execsql_sync_test $tn.1.8.3 { INSERT INTO t1 VALUES(15, 16) }    0

  # One sync on wal file, one on the db file.
  if {$tn==0} {
    do_execsql_sync_test $tn.1.9   { PRAGMA wal_checkpoint }  {2 0 3 3}
  } else {
    do_execsql_sync_test $tn.1.9   { PRAGMA wal_checkpoint }  {2 0}
  }
  
  # No syncs.
  do_execsql_test      $tn.1.10.1 { PRAGMA main.synchronous = OFF }
  do_execsql_test      $tn.1.10.2 { PRAGMA main.synchronous }          0
  do_execsql_sync_test $tn.1.10.3 { INSERT INTO t1 VALUES(17, 18) }    0

  
  do_execsql_test $tn.1.11.1 { PRAGMA main.synchronous; } 0
  do_execsql_test $tn.1.11.2 { PRAGMA main.synchronous = 10; } {}
  do_execsql_test $tn.1.11.3 { PRAGMA main.synchronous; } 2
  do_execsql_test $tn.1.11.4 { PRAGMA main.synchronous =  9; } {}
  do_execsql_test $tn.1.11.5 { PRAGMA main.synchronous; } 1
  do_execsql_test $tn.1.11.6 { PRAGMA main.synchronous =  8; } {}
  do_execsql_test $tn.1.11.7 { PRAGMA main.synchronous; } 0
  do_execsql_test $tn.1.11.8 { PRAGMA main.synchronous =  7; } {}
  do_execsql_test $tn.1.11.9 { PRAGMA main.synchronous; } 0
  do_execsql_test $tn.1.11.10 { PRAGMA main.synchronous =  6; } {}
  do_execsql_test $tn.1.11.11 { PRAGMA main.synchronous; } 6
  do_execsql_test $tn.1.11.12 { PRAGMA main.synchronous =  5; } {}
  do_execsql_test $tn.1.11.13 { PRAGMA main.synchronous; } 5
  do_execsql_test $tn.1.11.14 { PRAGMA main.synchronous =  4; } {}
  do_execsql_test $tn.1.11.15 { PRAGMA main.synchronous; } 4
  do_execsql_test $tn.1.11.16 { PRAGMA main.synchronous =  3; } {}
  do_execsql_test $tn.1.11.17 { PRAGMA main.synchronous; } 3
  do_execsql_test $tn.1.11.18 { PRAGMA main.synchronous =  2; } {}
  do_execsql_test $tn.1.11.19 { PRAGMA main.synchronous; } 2
  do_execsql_test $tn.1.11.20 { PRAGMA main.synchronous =  1; } {}
  do_execsql_test $tn.1.11.21 { PRAGMA main.synchronous; } 1
  do_execsql_test $tn.1.11.22 { PRAGMA main.synchronous =  0; } {}
  do_execsql_test $tn.1.11.23 { PRAGMA main.synchronous; } 0

  #-----------------------------------------------------------------------
  # Tests for the compile time settings SQLITE_DEFAULT_SYNCHRONOUS and
  # SQLITE_DEFAULT_WAL_SYNCHRONOUS. These tests only run if the former
  # is set to "2" and the latter to "1". This is not the default, but
  # it is currently the recommended configuration.
  #
  #   https://sqlite.org/compile.html#recommended_compile_time_options
  #
  if {$SQLITE_DEFAULT_SYNCHRONOUS==2 && $SQLITE_DEFAULT_WAL_SYNCHRONOUS==1} {

    db close
    sqlite3 db $file

    # Wal mode, sync=normal. The first transaction does one sync on directory,
    # one on the wal file. The second does no syncs.
    do_execsql_sync_test $tn.1.11.1 { INSERT INTO t1 VALUES(19, 20) } 2
    do_execsql_sync_test $tn.1.11.2 { INSERT INTO t1 VALUES(21, 22) } 0
    do_execsql_test $tn.1.11.3      { PRAGMA main.synchronous }       1

    # One sync on wal file, one on the db file.
    if {$tn==0} {
      do_execsql_sync_test $tn.1.12   { PRAGMA wal_checkpoint }  {2 0 2 2}
    } else {
      do_execsql_sync_test $tn.1.12   { PRAGMA wal_checkpoint }  {2 0}
    }

    # First transaction syncs the wal file once, the second not at all.
    # one on the wal file. The second does no syncs.
    do_execsql_sync_test $tn.1.13.1 { INSERT INTO t1 VALUES(22, 23) } 1
    do_execsql_sync_test $tn.1.13.2 { INSERT INTO t1 VALUES(24, 25) } 0

    if {$tn==0} {
      do_execsql_test $tn.1.14 { PRAGMA journal_mode = delete } {delete}
    } else {
      do_execsql_test $tn.1.14 { PRAGMA zipvfs_journal_mode = delete } {delete}
    }
    
    # Delete mode, sync=full. The first transaction does one sync on 
    # directory, two on the journal file, one on the db. The second does 
    # the same.
    do_execsql_sync_test $tn.1.15.1 { INSERT INTO t1 VALUES(26, 27) } 4
    do_execsql_sync_test $tn.1.15.2 { INSERT INTO t1 VALUES(28, 29) } 4
    do_execsql_test $tn.1.15.3      { PRAGMA main.synchronous }       2

    # Switch back to wal mode.
    if {$tn==0} {
      do_execsql_test $tn.1.16 { PRAGMA journal_mode = wal } {wal}
    } else {
      do_execsql_test $tn.1.16 { PRAGMA zipvfs_journal_mode = wal } {wal}
    }
    do_execsql_sync_test $tn.1.17.1 { INSERT INTO t1 VALUES(30, 31) } 2
    do_execsql_sync_test $tn.1.17.2 { INSERT INTO t1 VALUES(32, 33) } 0
    do_execsql_test $tn.1.17.3      { PRAGMA main.synchronous }       1

    # Now set synchronous=off, then switch back to delete mode. Check
    # that the db handle is still using synchronous=off.
    do_execsql_test $tn.1.18.3      { PRAGMA main.synchronous=off }
    if {$tn==0} {
      do_execsql_test $tn.1.18 { PRAGMA journal_mode = delete } {delete}
    } else {
      do_execsql_test $tn.1.18 { PRAGMA zipvfs_journal_mode = delete } {delete}
    }
    do_execsql_sync_test $tn.1.19.1 { INSERT INTO t1 VALUES(34, 35) } 0
    do_execsql_sync_test $tn.1.19.2 { INSERT INTO t1 VALUES(36, 37) } 0
    do_execsql_test $tn.1.19.3      { PRAGMA main.synchronous }       0

    # Close and reopen the db. Back to synchronous=normal.
    db close
    sqlite3 db $file
    do_execsql_sync_test $tn.1.20.1 { INSERT INTO t1 VALUES(38, 39) } 4
    do_execsql_sync_test $tn.1.20.2 { INSERT INTO t1 VALUES(40, 41) } 4
    do_execsql_test $tn.1.20.3      { PRAGMA main.synchronous }       2
  }


  #-----------------------------------------------------------------------
  # Tests for pass-through mode. 
  #
  set R $SQLITE_DEFAULT_SYNCHRONOUS
  set W $SQLITE_DEFAULT_WAL_SYNCHRONOUS

  db close
  forcedelete test.db

  sqlite3 db test.db
  do_execsql_test $tn.2.1 { CREATE TABLE t1(a, b); }

  db close
  sqlite3 db $file
  do_execsql_test $tn.2.2 { PRAGMA main.synchronous } $R

  db close
  sqlite3 db test.db
  do_execsql_test $tn.2.3 { PRAGMA journal_mode = wal } {wal}

  db close
  sqlite3 db $file
  do_execsql_test $tn.2.4 { PRAGMA main.synchronous } $W
}

db close
zip_unregister
finish_test
